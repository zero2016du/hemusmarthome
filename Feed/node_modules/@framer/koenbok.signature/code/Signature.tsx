import * as React from "react";
import { Animatable, PropertyControls, ControlType } from "framer";

import SignaturePad from "./signature/signature_pad";

type Props = {
  width: Animatable<number>;
  height: Animatable<number>;
  background: string;
  color: string;
  minWidth: number;
  maxWidth: number;
  dotSize: number;
};

export class Signature extends React.Component<Props> {
  private signature: SignaturePad;
  private canvas = React.createRef<HTMLCanvasElement>();

  static defaultProps: Partial<Props> = {
    color: "#000",
    background: "#fff",
    minWidth: 0.5,
    maxWidth: 2.5,
    dotSize: 2
  };

  static propertyControls: PropertyControls<Props> = {
    color: { type: ControlType.Color, title: "Pen" },
    background: { type: ControlType.Color, title: "Background" },
    minWidth: {
      type: ControlType.Number,
      min: 0,
      max: 10,
      title: "Min Width"
    },
    maxWidth: {
      type: ControlType.Number,
      min: 0,
      max: 10,
      title: "Max Width"
    }
  };

  componentDidMount() {
    if (this.canvas.current) {
      this.signature = new SignaturePad(this.canvas.current);
    }
  }

  clear = () => {
    if (this.signature) {
      this.signature.clear();
    }
  };

  render() {
    if (this.signature) {
      this.signature.penColor = this.props.color;
      this.signature.minWidth = this.props.minWidth;
      this.signature.maxWidth = this.props.maxWidth;
      this.signature.dotSize = this.props.dotSize;
    }

    return (
      <canvas
        ref={this.canvas}
        width={Animatable.getNumber(this.props.width)}
        height={Animatable.getNumber(this.props.height)}
        onDoubleClick={this.clear}
        style={{ backgroundColor: this.props.background }}
      />
    );
  }
}
